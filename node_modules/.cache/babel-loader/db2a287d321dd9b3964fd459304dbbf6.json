{"remainingRequest":"/home/jamie/git/deltabrot/vue3-material/node_modules/babel-loader/lib/index.js!/home/jamie/git/deltabrot/vue3-material/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/home/jamie/git/deltabrot/vue3-material/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/jamie/git/deltabrot/vue3-material/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/jamie/git/deltabrot/vue3-material/src/lib-components/button.vue?vue&type=template&id=eb67e10c&scoped=true","dependencies":[{"path":"/home/jamie/git/deltabrot/vue3-material/src/lib-components/button.vue","mtime":1614280922812},{"path":"/home/jamie/git/deltabrot/vue3-material/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jamie/git/deltabrot/vue3-material/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/jamie/git/deltabrot/vue3-material/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/jamie/git/deltabrot/vue3-material/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/jamie/git/deltabrot/vue3-material/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlVk5vZGUgYXMgX2NyZWF0ZVZOb2RlLCByZW5kZXJTbG90IGFzIF9yZW5kZXJTbG90LCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlQmxvY2sgYXMgX2NyZWF0ZUJsb2NrLCB3aXRoU2NvcGVJZCBhcyBfd2l0aFNjb3BlSWQsIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhJZCA9IC8qI19fUFVSRV9fKi9fd2l0aFNjb3BlSWQoImRhdGEtdi1lYjY3ZTEwYyIpOwoKX3B1c2hTY29wZUlkKCJkYXRhLXYtZWI2N2UxMGMiKTsKCnZhciBfaG9pc3RlZF8xID0gLyojX19QVVJFX18qL19jcmVhdGVWTm9kZSgiZGl2IiwgewogIGNsYXNzOiAiYnRuLW92ZXJsYXkiCn0sIG51bGwsIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soImJ1dHRvbiIsIHsKICAgIGNsYXNzOiAiYnRuLXJpcHBsZSIsCiAgICBvbk1vdXNlZG93bjogX2NhY2hlWzFdIHx8IChfY2FjaGVbMV0gPSBmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiBfY3R4LmNyZWF0ZVJpcHBsZSAmJiBfY3R4LmNyZWF0ZVJpcHBsZS5hcHBseShfY3R4LCBhcmd1bWVudHMpOwogICAgfSksCiAgICB0eXBlOiBfY3R4LnR5cGUsCiAgICByZWY6ICJidG5SaXBwbGUiCiAgfSwgW19ob2lzdGVkXzEsIF9yZW5kZXJTbG90KF9jdHguJHNsb3RzLCAiZGVmYXVsdCIpXSwgNDAKICAvKiBQUk9QUywgSFlEUkFURV9FVkVOVFMgKi8KICAsIFsidHlwZSJdKTsKfSk7"},{"version":3,"sources":["/home/jamie/git/deltabrot/vue3-material/src/lib-components/button.vue"],"names":[],"mappings":";;;;;;8BAOQ,YAAA,CAA+B,KAA/B,EAA+B;AAA1B,EAAA,KAAK,EAAC;AAAoB,CAA/B,EAAwB,IAAxB,EAAwB,CAAA;AAAA;AAAxB,C;;;;;uBANJ,YAAA,CAQS,QART,EAQS;AAPL,IAAA,KAAK,EAAC,YAOD;AANJ,IAAA,WAAS,EAAA,MAAA,CAAA,CAAA,CAAA,KAAA,MAAA,CAAA,CAAA,CAAA,GAAA;AAAA,aAAE,IAAA,CAAA,YAAA,IAAA,IAAA,CAAA,YAAA,OAAA,IAAA,YAAF;AAAA,KAAA,CAML;AALJ,IAAA,IAAI,EAAE,IAAA,CAAA,IAKF;AAJL,IAAA,GAAG,EAAC;AAIC,GART,E,CAMI,U,EACA,WAAA,CAAa,IAAA,CAAA,MAAb,EAAa,SAAb,C,CAPJ,E;;AAAA,I,QAAA,C","sourcesContent":["<template>\n    <button\n        class=\"btn-ripple\"\n        @mousedown=\"createRipple\"\n        :type=\"type\"\n        ref=\"btnRipple\"\n    >\n        <div class=\"btn-overlay\"></div>\n        <slot></slot>\n    </button>\n</template>\n\n<script lang=\"ts\">\n// vue\nimport { defineComponent, ref, onMounted } from 'vue';\n\nexport default defineComponent({\n    props: {\n        type: {\n            type: String,\n            default: 'button',\n        },\n        background: {\n            type: String,\n            default: '#3ca354',\n        },\n        color: {\n            type: String,\n            default: '#ffffff',\n        },\n        elevation: {\n            type: Number,\n            default: 1,\n        },\n    },\n    // eslint-disable-next-line\n    setup(props: any) {\n        // refs\n        const btnRipple = ref<null | HTMLElement>(null);\n\n        // lifecycle hooks\n        onMounted(() => {\n            if (btnRipple.value) {\n                btnRipple.value.style.setProperty(\n                    '--background',\n                    props.background,\n                );\n\n                const elevationShadowColor = props.elevation * 0.5;\n                btnRipple.value.style.setProperty(\n                    '--elevation-shadow',\n                    `0 2px 4px rgba(0, 0, 0, ${elevationShadowColor})`,\n                );\n                btnRipple.value.style.setProperty('--color', props.color);\n            }\n        });\n\n        // methods\n        const createRipple = (event: PointerEvent) => {\n            const button = event.currentTarget as HTMLElement;\n\n            if (button) {\n                const circle = document.createElement('span');\n                const diameter = Math.max(\n                    button.clientWidth,\n                    button.clientHeight,\n                );\n                const radius = diameter / 2;\n\n                circle.style.width = circle.style.height = `${diameter}px`;\n\n                const buttonElement = button.getBoundingClientRect();\n                circle.style.left = `\n                    ${event.clientX - buttonElement.left - radius}px\n                `;\n                circle.style.top = `\n                    ${event.clientY - buttonElement.top - radius}px\n                `;\n                circle.classList.add('ripple');\n\n                const ripple = button.getElementsByClassName('ripple')[0];\n                if (ripple) {\n                    ripple.remove();\n                }\n\n                button.appendChild(circle);\n            }\n        };\n\n        return {\n            props,\n            createRipple,\n            btnRipple,\n        };\n    },\n});\n</script>\n\n<style scoped>\n.btn-ripple {\n    user-select: none;\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    overflow: hidden;\n    transition: background 400ms;\n    color: var(--color);\n    background: var(--background);\n    padding: 10px 16px;\n    font-size: 0.88rem;\n    outline: 0;\n    border: 0;\n    border-radius: 4px;\n    box-shadow: var(--elevation-shadow);\n    cursor: pointer;\n    white-space: nowrap;\n}\n\n.btn-ripple:hover .btn-overlay {\n    background: rgba(255, 255, 255, 0.05);\n}\n\n.btn-ripple:focus .btn-overlay {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.btn-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(255, 255, 255, 0);\n    transition-duration: 0.1s;\n}\n</style>\n\n<style>\nspan.ripple {\n    display: flex;\n    position: absolute;\n    border-radius: 50%;\n    transform: scale(0);\n    animation: ripple 600ms linear;\n    background: rgba(255, 255, 255, 0.7);\n    box-shadow: 0 0 10px 10px rgba(255, 255, 255, 0.7);\n}\n\n@keyframes ripple {\n    to {\n        transform: scale(4);\n        opacity: 0;\n    }\n}\n</style>\n"],"sourceRoot":""}]}